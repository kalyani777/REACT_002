// Complex Example for Call Back

// Creating Person - Custom/Complex Datatype
function Person(options){
	return {
		name: options.name,
		age: options.age,
		gender: options.gender,
		city: options.city,
		getDisplayName: function(){
			return options.name + ","+ options.age + ","+ options.gender + ","+ options.city;
		}
	}
}

// Creating Array of Person Instances from JSON Array of data
function createPersons(){
	var persons = [];
	var data = [
		{ name: 'Keerthi', age: 20, gender: 'f', city: 'Hyderabad'},
		{ name: 'Naresh', age: 20, gender: 'm', city: 'Vijaywada'},
		{ name: 'Prakash', age: 21, gender: 'm', city: 'Hyderabad'},
		{ name: 'Archana', age: 21, gender: 'f', city: 'Delhi'},
		{ name: 'Lakshman', age: 23, gender: 'm', city: 'Hyderabad'},
		{ name: 'Bavani', age: 21, gender: 'f', city: 'Hyderabad'},
		{ name: 'Venkat', age: 27, gender: 'm', city: 'Delhi'},
		{ name: 'Mallesh', age: 22, gender: 'm', city: 'Hyderabad'},
		{ name: 'Bindu', age: 27, gender: 'f', city: 'Ongole'},
		{ name: 'Arjun', age: 20, gender: 'm', city: 'Delhi'},
		{ name: 'Kumar', age: 23, gender: 'm', city: 'Hyderabad'},
		{ name: 'Preethi', age: 32, gender: 'f', city: 'Hyderabad'},
		{ name: 'Ramesh', age: 30, gender: 'm', city: 'Visakapatnam'},
		{ name: 'Suresh', age: 32, gender: 'm', city: 'Nellore'}
	];
	for(var item of data){
		persons.push(new Person(item));
	}
	
	return persons;
}

var persons = createPersons();

// Create a function accepting all persons, 
and returns persons having age 20
function retrieveByAge20(persons){
	var items = [];
	for(var person of persons){
		if(person.age == 20){
			items.push(person);
		}
	}
	return items;
}
var p1 = retrieveByAge20(persons);

// Create a function accepting all persons, age 
and returns persons
function retrieveByAge(persons, age){
	var items = [];
	for(var person of persons){
		if(person.age == age){
			items.push(person);
		}
	}
	return items;
}
var p2 = retrieveByAge(persons, 20);
var p3 = retrieveByAge(persons, 23);

// Create a function accepting all persons, city
and returns persons
function retrieveByCity(persons, city){
	var items = [];
	for(var person of persons){
		if(person.city == city){
			items.push(person);
		}
	}
	return items;
}
var p4 = retrieveByCity(persons, 'Hyderabad');

function retrieve(persons, callBack){
	var items = [];
	for(var person of persons){
		if(callBack(person)){
			items.push(person);
		}
	}
	return items;
}
var p2 = retrieveByAge(persons, 20);
var p2 = retrieve(persons, function(person) { 
	return person.age == 20; 
});

var p3 = retrieveByAge(persons, 23);
var p3 = retrieve(persons, function(person) {
	return person.age == 23;
});
var p4 = retrieveByCity(persons, 'Hyderabad');
var p4 = retrieve(persons, function(person) {
	return person.city == 'Hyderabad';
});

Array.prototype.retrieve = function(callBack){
	var filteredItems = [];
	for(var item of this){
		if(callBack(item)){
			filteredItems.push(item);
		}
	}
	return filteredItems;
}

persons.retrieve(function(person){ return person.age == 20; });

// you can have good naming convention like where
persons.where(function(person){ return person.age == 20; });

// Iterating all items of array and calling callBack function for each item
Array.prototype.forEach = function(callBack) {
	for(var item of this){
		callBack(item);
	}
}
persons.forEach(function(person) {console.log(person.getDisplayName())});

persons.retrieve(function(person){ return person.age == 20; }).forEach(function(person) { console.log(person.getDisplayName() )});

